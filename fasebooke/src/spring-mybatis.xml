<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	"
		>

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 数据源，使用dbcp -->
   <context:component-scan base-package="com.fase.*">
	  <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
          		<property name="driverClassName" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
				<!-- 数据库连接池 -->
          	</bean>


<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">

	<property name="protocol" value="smtp"/>

	<property name="host" value="smtp.163.com"/>

	<property name="port" value="25" /><!--Gmail的SMTP端口居然是这个，去google网站上了解吧-->

	<property name="username" value="ni.bilin@163.com"/>

	<property name="password" value="bc1308190208"/>

</bean>



	<!-- sqlSessinFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
    <property name="configLocation" value="classpath:SqlMapConfig.xml" />  
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描SQL配置文件-->
	</bean>
     
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
				<property name="basePackage" value="com.fase.mapper"></property>
				<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
			</bean>
			
 <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->  
<tx:annotation-driven transaction-manager="transactionManager" /> 

<tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <!-- the transactional semantics... -->  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />    
            <tx:method name="delete*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>    
            <tx:method name="update*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
             <tx:method name="check*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>   
        </tx:attributes>  
    </tx:advice>  
	 
</beans>