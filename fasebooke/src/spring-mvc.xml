<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.directwebremoting.org/schema/spring-dwr    
		http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
   
   <!-- 开启springmvc注解模式，加静态资源默认serverlt配置，配置jsp，显示viewRESOLve,扫描web相关bean-->
	<!-- 可以扫描controller、service、...
	这里让扫描controller，指定controller的包
	 -->
	 <context:annotation-config/>
	<context:component-scan base-package="com.fase.*">
	  <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	 <!-- 注意这里新增加的dwr tag, 为使其生效，文件头中要声明namespace -->  
 
	<!-- 静态资源解析
	包括 ：js、css、img、..
	 -->
<!-- 	 <mvc:resources location="/resources/**" mapping="/js/**"/>
<mvc:resources location="/resources/**" mapping="/css/**"/>
<mvc:resources location="/resources/**" mapping="/img/**"/>
<mvc:resources location="/resources/**" mapping="/font/**"/> -->
	
		
	<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	 -->
	<mvc:annotation-driven validator="validator"></mvc:annotation-driven>
	

	<!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 自定义参数绑定 -->
<!-- 	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		转换器
		<property name="converters">
			<list>
				日期类型转换
				<bean class="cn.itcast.ssm.controller.converter.CustomDateConverter"/>
			</list>
		</property>
		
	
	</bean> -->
	
	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	<!-- 	资源文件名 -->
		<property name="basenames">   
            <value>classpath:CustomValidationMessages</value> 
       	 
    	</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean> 
	<!-- 全局异常处理器
	只要实现HandlerExceptionResolver接口就是全局异常处理器
	<bean class="cn.itcast.ssm.exception.CustomExceptionResolver"></bean>
	 -->
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>
	
	<!--拦截器 -->
	  
<!--  <mvc:interceptors> 
	多个拦截器,顺序执行
	登陆认证拦截器
	<mvc:interceptor> 
		<mvc:mapping path="/**"/>
		<bean class="com.fase.intercepter.LoginIntercepter"></bean>
	</mvc:interceptor>
</mvc:interceptors>  -->

	
	
</beans>